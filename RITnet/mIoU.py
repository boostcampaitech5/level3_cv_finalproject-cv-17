import cv2
import numpy as np
import matplotlib.pyplot as plt
import os
import numpy
import time
import argparse
import sys

#print(os.path.basename(sys.argv))
print(sys.argv)

parser = argparse.ArgumentParser(description='NIA_Seg Parse')
parser.add_argument('--test_origin_path', type=str, default='./eye_data/test/labels/',
                    help='Enter the actual origin test data path.')
parser.add_argument('--test_result_path', type=str, default='./0try/labels/',
                    help='Enter the path that contains the results generated by the model.')
parser.add_argument('--txt_log_path', type=str, default='miou_log.txt',
                    help='Enter the txt file to create the log.')




def mIoU(predictions, targets, info=False):  ###Mean per class accuracy
    unique_labels = np.unique(targets)
    num_unique_labels = len(unique_labels)
    ious = []
    for index in range(num_unique_labels):
        pred_i = predictions == index
        label_i = targets == index
        intersection = np.logical_and(label_i, pred_i)
        union = np.logical_or(label_i, pred_i)
        iou_score = np.sum(intersection)/np.sum(union)
        ious.append(iou_score)
    if info:
        print ("per-class mIOU: ", ious)
    return np.mean(ious)


if __name__ == "__main__":
    args = parser.parse_args()
    
    origin_path = os.listdir(args.test_origin_path)
    print('test_origin_path:',args.test_origin_path)
    print('test_result_path:',args.test_result_path)
    print('txt_log_path:',args.txt_log_path)
    record = []
    miou = 0
    record.append(['miou cal start:', time.strftime('%c', time.localtime(time.time()))])
    print('miou cal start:', time.strftime('%c', time.localtime(time.time())))
    for i in origin_path:
        origin_label = np.load(args.test_origin_path+i)
        model_label = np.load(args.test_result_path+i)
        time_str = time.strftime('%c', time.localtime(time.time()))
        iou = mIoU(origin_label,model_label)
        miou = miou + iou
        print(time_str,'-', i,'-', iou)
        record.append([time_str,'-', i,'-', iou])
    record.append(['miou cal finish:', time.strftime('%c', time.localtime(time.time()))])
    print('miou cal finish:', time.strftime('%c', time.localtime(time.time())))
    miou = miou/len(origin_path)
    record.append(['miou_average:',miou])
    print('miou_average:',miou)
    
    
    with open(args.txt_log_path, "w") as file:
        for i in range(len(record)):
            miou_str = str(record[i])
            print(miou_str)
            file.write(str(miou_str+"\n"))

